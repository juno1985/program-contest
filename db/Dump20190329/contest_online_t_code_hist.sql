-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: localhost    Database: contest_online
-- ------------------------------------------------------
-- Server version	5.7.12-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `t_code_hist`
--

DROP TABLE IF EXISTS `t_code_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_code_hist` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` longtext COLLATE utf8_bin,
  `submit_time` datetime DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `result` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `problem_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `problem_id` (`problem_id`),
  CONSTRAINT `t_code_hist_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `t_user` (`id`),
  CONSTRAINT `t_code_hist_ibfk_2` FOREIGN KEY (`problem_id`) REFERENCES `t_problems` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_code_hist`
--

LOCK TABLES `t_code_hist` WRITE;
/*!40000 ALTER TABLE `t_code_hist` DISABLE KEYS */;
INSERT INTO `t_code_hist` VALUES (7,'import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scanner = new Scanner(System.in);\n        String out = null;\n        int i = 0;\n        while(scanner.hasNext()) {\n            out = scanner.nextLine();\n            System.out.println(++i +\" \" + out);\n            if(out.indexOf(\"end-of-file\")!=    -1) return;\n        }\n    }\n}','2019-03-25 10:18:54',9,'success',3),(8,'import java.util.*;\nclass Solution{\n    \n    public static void main(String []argh)\n    {\n        Scanner sc = new Scanner(System.in);\n        \n        while (sc.hasNext()) {\n            String input=sc.next();\n            //Complete the code\n            try{\n                System.out.println(balance_check(input));\n            }catch(Exception ex) {\n                System.out.println(false);\n            }\n            \n        }\n        \n    }\n    \n    public static boolean balance_check(String input) throws Exception{\n        Stack<Character> stack = new Stack<>();\n        int length = input.length();\n        for(int i=0;i<length;i++) {\n            char temp_char = input.charAt(i);\n            switch(temp_char) {\n                case \')\':\n                    if(\'(\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                case \'}\':\n                    if(\'{\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                case \']\':\n                    if(\'[\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                default:\n                    stack.push(temp_char);\n            }\n        }\n        return stack.isEmpty();\n    }\n}','2019-03-25 10:20:17',9,'success',2),(9,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-25 10:21:39',10,'failure',2),(10,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n         \n        }\n\n    }\n}','2019-03-25 10:27:21',10,'failure',2),(11,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n     \n\n        while (true) {\n         \n        }\n\n    }\n}','2019-03-25 10:28:24',10,'failure',2),(12,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n     \n\n        while (true) {\n         \n        }\n\n    }\n}','2019-03-25 10:28:49',10,'failure',2),(13,'import java.util.*;\nclass Solution{\n    \n    public static void main(String []argh)\n    {\n        Scanner sc = new Scanner(System.in);\n        \n        while (sc.hasNext()) {\n            String input=sc.next();\n            //Complete the code\n            try{\n                System.out.println(balance_check(input));\n            }catch(Exception ex) {\n                System.out.println(false);\n            }\n            \n        }\n        \n    }\n    \n    public static boolean balance_check(String input) throws Exception{\n        Stack<Character> stack = new Stack<>();\n        int length = input.length();\n        for(int i=0;i<length;i++) {\n            char temp_char = input.charAt(i);\n            switch(temp_char) {\n                case \')\':\n                    if(\'(\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                case \'}\':\n                    if(\'{\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                case \']\':\n                    if(\'[\'==stack.peek())\n                        {stack.pop();\n                        continue;\n                        }\n                    else break;\n                default:\n                    stack.push(temp_char);\n            }\n        }\n        return stack.isEmpty();\n    }\n}','2019-03-26 09:49:01',9,'failure',3),(14,'import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scanner = new Scanner(System.in);\n        String out = null;\n        int i = 0;\n        while(scanner.hasNext()) {\n            out = scanner.nextLine();\n            System.out.println(++i +\" \" + out);\n            if(out.indexOf(\"end-of-file\")!=    -1) return;\n        }\n    }\n}','2019-03-26 09:55:18',9,'success',3),(15,'import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scanner = new Scanner(System.in);\n        String out = null;\n        int i = 0;\n        while(scanner.hasNext()) {\n            out = scanner.nextLine();\n            System.out.println(++i +\" \" + out);\n            if(out.indexOf(\"end-of-file\")!=    -1) return;\n        }\n    }\n}','2019-03-28 14:34:37',10,'success',3),(16,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-28 14:35:09',10,'failure',2),(17,'import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scanner = new Scanner(System.in);\n        String out = null;\n        int i = 0;\n        while(scanner.hasNext()) {\n            out = scanner.nextLine();\n            System.out.println(++i +\" \" + out);\n            if(out.indexOf(\"end-of-file\")!=    -1) return;\n        }\n    }\n}','2019-03-28 14:46:14',9,'success',3),(18,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 10:59:36',9,'failure',2),(19,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 10:59:42',9,'failure',2),(20,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 10:59:48',9,'failure',2),(21,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 10:59:52',9,'failure',2),(22,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 10:59:57',9,'failure',2),(23,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:06:12',9,'failure',2),(24,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:06:46',9,'failure',2),(25,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:07:01',9,'failure',2),(26,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:07:10',9,'failure',2),(27,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:48',9,'failure',2),(28,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:53',9,'failure',2),(29,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:53',9,'failure',2),(30,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:54',9,'failure',2),(31,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:54',9,'failure',2),(32,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:54',9,'failure',2),(33,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:54',9,'failure',2),(34,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:58',9,'failure',2),(35,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:59',9,'failure',2),(36,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:59',9,'failure',2),(37,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:59',9,'failure',2),(38,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:12:59',9,'failure',2),(39,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:13:07',9,'failure',2),(40,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:16:56',9,'failure',2),(41,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:17:42',9,'failure',2),(42,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:18:04',9,'failure',2),(43,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:20:42',9,'failure',2),(44,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:21:47',9,'failure',2),(45,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:22:28',9,'failure',2),(46,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:24:15',9,'failure',2),(47,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:24:24',9,'failure',2),(48,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:24:26',9,'failure',2),(49,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:25:32',9,'failure',2),(50,'import java.util.*;\n\nclass Solution {\n\n    public static void main(String[] argh) {\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            String input = sc.next();\n            // Complete the code\n            Stack<Character> stack = new Stack<>();\n            int length = input.length();\n            for (int i = 0; i < length; i++) {\n                char temp_char = input.charAt(i);\n                switch (temp_char) {\n                case \')\':\n                    if (\'(\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \'}\':\n                    if (\'{\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                case \']\':\n                    if (\'[\' == stack.peek()) {\n                        stack.pop();\n                        continue;\n                    } else\n                        break;\n                default:\n                    stack.push(temp_char);\n                }\n            }\n            System.out.println(stack.isEmpty());\n\n        }\n\n    }\n}','2019-03-29 11:25:36',9,'failure',2);
/*!40000 ALTER TABLE `t_code_hist` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-03-29 13:16:55
